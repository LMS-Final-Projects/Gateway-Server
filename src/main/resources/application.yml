server:
  port: 8000

spring:
  application:
    name: LMS-GATEWAY
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"  # 여기에 모든 허용하는 origin을 나열
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        - id: auth-service
          uri: "lb://AUTH-SERVER"
          predicates:
            - Path=/api/v1/member/**, /api/v1/major/**

        - id: application-server
          uri: "lb://APPLICATION-SERVER"
          predicates:
            - Path=/api/v1/application/**, /api/v1/manager/application/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: board-server
          uri: "lb://BOARD-SERVER"
          predicates:
            - Path=/api/v1/notices/** , /api/v1/boards/** ,/api/v1/replies/**,/api/v1/comments/**, /api/v1/manager/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: post-server
          uri: "lb://POST-SERVER"
          predicates:
            - Path=/api/v1/post/**, /api/v1/member/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: lecture-server
          uri: "lb://LECTURE-SERVER"
          predicates:
            - Path=/api/v1/lectures/**, /api/v1/manager/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: student-server
          uri: "lb://STUDENT-SERVER"
          predicates:
            - Path=/api/v1/student/**, /api/v1/manager/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: professor-server
          uri: "lb://PROFESSOR-SERVER"
          predicates:
            - Path=/api/v1/professor/**, /api/v1/manager/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false

        - id: schedule-server
          uri: "lb://SCHEDULE-SERVER"
          predicates:
            - Path=/api/v1/schedule/**
          filters:
            - name: "TokenFilter"
              args:
                logging: false





management:
  endpoints:
    web:
      exposure:
        include: health,beans,refresh


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

  instance:
    instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
